import{TileLayer as t}from"leaflet";
/*
  Leaflet.TileLayer.ColorFilter
  (c) 2018-2025, Claudio T. Kawakani
  A simple and lightweight Leaflet plugin to apply CSS filters on map tiles.
  https://github.com/xtk93x/Leaflet.TileLayer.ColorFilter
*/class e extends t{constructor(t,e){super(t,e)}colorFilter(){let t=["blur:px","brightness:%","bright:brightness:%","bri:brightness:%","contrast:%","con:contrast:%","grayscale:%","gray:grayscale:%","hue-rotate:deg","hue:hue-rotate:deg","hue-rotation:hue-rotate:deg","invert:%","inv:invert:%","opacity:%","op:opacity:%","saturate:%","saturation:saturate:%","sat:saturate:%","sepia:%","sep:sepia:%"];return(this.options.filter?this.options.filter:[]).map(e=>{let r=e.toLowerCase().split(":");if(2===r.length){let e=t.find(t=>t.split(":")[0]===r[0]);if(e)return e=e.split(":"),r[1]+=/^\d+$/.test(r[1])?e[e.length-1]:"",`${e[e.length-2]}(${r[1]})`}return""}).join(" ")}onAdd(t){super.onAdd(t),this._container.style.filter=this.colorFilter()}updateFilter(t){this.options.filter=t,this._container&&(this._container.style.filter=this.colorFilter())}}export{e as TileLayerColorFilter};
//# sourceMappingURL=leaflet-tilelayer-colorfilter.min.js.map
