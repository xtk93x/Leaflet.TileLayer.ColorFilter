{"version":3,"file":"leaflet-tilelayer-colorfilter.min.js","sources":["../src/leaflet-tilelayer-colorfilter.js"],"sourcesContent":["/*\n  Leaflet.TileLayer.ColorFilter\n  (c) 2018-2025, Claudio T. Kawakani\n  A simple and lightweight Leaflet plugin to apply CSS filters on map tiles.\n  https://github.com/xtk93x/Leaflet.TileLayer.ColorFilter\n*/\n\nimport { TileLayer } from 'leaflet';\n\nexport class TileLayerColorFilter extends TileLayer {\n    constructor(url, options) {\n        super(url, options);\n    }\n\n    colorFilter() {\n        let VALIDFILTERS = [\n            'blur:px',\n            'brightness:%', 'bright:brightness:%', 'bri:brightness:%',\n            'contrast:%', 'con:contrast:%',\n            'grayscale:%', 'gray:grayscale:%',\n            'hue-rotate:deg', 'hue:hue-rotate:deg', 'hue-rotation:hue-rotate:deg',\n            'invert:%', 'inv:invert:%',\n            'opacity:%', 'op:opacity:%',\n            'saturate:%', 'saturation:saturate:%', 'sat:saturate:%',\n            'sepia:%', 'sep:sepia:%',\n        ]\n\n        let colorFilterOptions = this.options.filter ? this.options.filter : [];\n        let filterSettings = colorFilterOptions.map((opt) => {\n            let filter = opt.toLowerCase().split(':');\n            if (filter.length === 2) {\n                let match = VALIDFILTERS.find(vf => {\n                    return (vf.split(':')[0] === filter[0]);\n                });\n                if (match) {\n                    match = match.split(':');\n                    filter[1] += /^\\d+$/.test(filter[1]) ? match[match.length - 1] : ''\n                    return (`${match[match.length - 2]}(${filter[1]})`);\n                }\n            }\n            return ('');\n        }).join(' ');\n        return (filterSettings);\n    }\n\n    onAdd(map) {\n        super.onAdd(map);\n        this._container.style.filter = this.colorFilter();\n    }\n\n    updateFilter(newFilter) {\n        this.options.filter = newFilter;\n        if (this._container) {\n            this._container.style.filter = this.colorFilter();\n        }\n    }\n}"],"names":["TileLayerColorFilter","TileLayer","constructor","url","options","super","colorFilter","VALIDFILTERS","this","filter","map","opt","toLowerCase","split","length","match","find","vf","test","join","onAdd","_container","style","updateFilter","newFilter"],"mappings":";;;;;;EASO,MAAMA,UAA6BC,EACtC,WAAAC,CAAYC,EAAKC,GACbC,MAAMF,EAAKC,EACd,CAED,WAAAE,GACI,IAAIC,EAAe,CACf,UACA,eAAgB,sBAAuB,mBACvC,aAAc,iBACd,cAAe,mBACf,iBAAkB,qBAAsB,8BACxC,WAAY,eACZ,YAAa,eACb,aAAc,wBAAyB,iBACvC,UAAW,eAkBf,OAfyBC,KAAKJ,QAAQK,OAASD,KAAKJ,QAAQK,OAAS,IAC7BC,IAAKC,IACzC,IAAIF,EAASE,EAAIC,cAAcC,MAAM,KACrC,GAAsB,IAAlBJ,EAAOK,OAAc,CACrB,IAAIC,EAAQR,EAAaS,KAAKC,GAClBA,EAAGJ,MAAM,KAAK,KAAOJ,EAAO,IAExC,GAAIM,EAGA,OAFAA,EAAQA,EAAMF,MAAM,KACpBJ,EAAO,IAAM,QAAQS,KAAKT,EAAO,IAAMM,EAAMA,EAAMD,OAAS,GAAK,GACjE,GAAWC,EAAMA,EAAMD,OAAS,MAAML,EAAO,KAEpD,CACD,MAAA,KACDU,KAAK,IAEX,CAED,KAAAC,CAAMV,GACFL,MAAMe,MAAMV,GACZF,KAAKa,WAAWC,MAAMb,OAASD,KAAKF,aACvC,CAED,YAAAiB,CAAaC,GACThB,KAAKJ,QAAQK,OAASe,EAClBhB,KAAKa,aACLb,KAAKa,WAAWC,MAAMb,OAASD,KAAKF,cAE3C"}